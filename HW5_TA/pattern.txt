[Pattern 1 : Function Call]

    End at cycle 

    void main() {
        int a = 0;
        for(int i = 0; i < 10; i++) {
            a = func1(a);
            a = func2(a);
            a = func3(a);
        }
        while(1);
    }

    int func1(int a) {
        return (a + 7);
    }
    int func2(int a) {
        return (a > 50? a - 50 : a + 11);
    }
    int func3(int a) {
        return (a + 13);
    }

    a0: 53
    v0: 0
    fp: 200
    sp: 200
    196: 200
    200: 53
    224: 66
    228: 10

    main:
        addi    $sp, $zero, 200
        addi    $fp, $sp, 0
        sw      $zero, 24($fp)
        sw      $zero, 28($fp)
        j       L10

    func3:
        addi    $sp, $sp, -8
        sw      $fp, 4($sp)
        addi    $fp, $sp, 0
        sw      $a0, 8($fp)
        lw      $v0, 8($fp)
        addi    $v0, $v0, 13
        addi    $sp, $fp, 0
        lw      $fp, 4($sp)
        addi    $sp, $sp, 8
        jr      $ra

    func2:
        addi    $sp, $sp, -8
        sw      $fp, 4($sp)
        addi    $fp, $sp, 0
        sw      $a0, 8($fp)
        lw      $v0, 8($fp)
        slti    $v0, $v0, 51
        beq     $v0, $zero, L2
        j       L4
    L2:
        lw      $v0, 8($fp)
        addi    $v0, $v0, -50
        j       L6

    func1:
        addi    $sp, $sp, -8
        sw      $fp, 4($sp)
        addi    $fp, $sp, 0
        sw      $a0, 8($fp)
        lw      $v0, 8($fp)
        addi    $v0, $v0, 7
        addi    $sp, $fp, 0
        lw      $fp, 4($sp)
        addi    $sp, $sp, 8
        jr      $ra

    L4:
        lw      $v0, 8($fp)
        addi    $v0, $v0, 11
    L6:
        addi    $sp, $fp, 0
        lw      $fp, 4($sp)
        addi    $sp, $sp, 8
        jr      $ra
    L11:
        lw      $a0, 24($fp)
        jal     func1
        sw      $v0, 24($fp)
        lw      $a0, 24($fp)
        jal     func2
        sw      $v0, 24($fp)
        lw      $a0, 24($fp)
        jal     func3
        sw      $v0, 24($fp)
        lw      $v0, 28($fp)
        addi    $v0, $v0, 1
        sw      $v0, 28($fp)
    L10:
        lw      $v0, 28($fp)
        slti    $v0, $v0, 10
        beq     $v0, $zero, L12
        j       L11
    L12:
        j L13
    L13:
        j L14
    L14:
        j L15
    L15:
        j L15
    
    201d00c8 0x00 : addi    $sp, $zero, 200
    23be0000 0x04 : addi    $fp, $sp, 0
    afc00018 0x08 : sw      $zero, 24($fp)
    afc0001c 0x0c : sw      $zero, 28($fp)
    08000036 0x10 : j       L10
    func3:
    23bdfff8 0x14 : addi    $sp, $sp, -8
    afbe0004 0x18 : sw      $fp, 4($sp)
    23be0000 0x1c : addi    $fp, $sp, 0
    afc40008 0x20 : sw      $a0, 8($fp)
    8fc20008 0x24 : lw      $v0, 8($fp)
    2042000d 0x28 : addi    $v0, $v0, 13
    23dd0000 0x2c : addi    $sp, $fp, 0
    8fbe0004 0x30 : lw      $fp, 4($sp)
    23bd0008 0x34 : addi    $sp, $sp, 8
    03e00008 0x38 : jr      $ra
    func2:
    23bdfff8 0x3c : addi    $sp, $sp, -8
    afbe0004 0x40 : sw      $fp, 4($sp)
    23be0000 0x44 : addi    $fp, $sp, 0
    afc40008 0x48 : sw      $a0, 8($fp)
    8fc20008 0x4c : lw      $v0, 8($fp)
    28420033 0x50 : slti    $v0, $v0, 51
    10400001 0x54 : beq     $v0, $zero, L2
    08000024 0x58 : j       L4
    L2:
    8fc20008 0x5c : lw      $v0, 8($fp)
    2042ffce 0x60 : addi    $v0, $v0, -50
    08000026 0x64 : j       L6
    func1:
    23bdfff8 0x68 : addi    $sp, $sp, -8
    afbe0004 0x6c : sw      $fp, 4($sp)
    23be0000 0x70 : addi    $fp, $sp, 0
    afc40008 0x74 : sw      $a0, 8($fp)
    8fc20008 0x78 : lw      $v0, 8($fp)
    20420007 0x7c : addi    $v0, $v0, 7
    23dd0000 0x80 : addi    $sp, $fp, 0
    8fbe0004 0x84 : lw      $fp, 4($sp)
    23bd0008 0x88 : addi    $sp, $sp, 8
    03e00008 0x8c : jr      $ra
    L4:
    8fc20008 0x90 : lw      $v0, 8($fp)
    2042000b 0x94 : addi    $v0, $v0, 11
    L6:
    23dd0000 0x98 : addi    $sp, $fp, 0
    8fbe0004 0x9c : lw      $fp, 4($sp)
    23bd0008 0xa0 : addi    $sp, $sp, 8
    03e00008 0xa4 : jr      $ra
    L11:
    8fc40018 0xa8 : lw      $a0, 24($fp)
    0c00001a 0xac : jal     func1
    afc20018 0xb0 : sw      $v0, 24($fp)
    8fc40018 0xb4 : lw      $a0, 24($fp)
    0c00000f 0xb8 : jal     func2
    afc20018 0xbc : sw      $v0, 24($fp)
    8fc40018 0xc0 : lw      $a0, 24($fp)
    0c000005 0xc4 : jal     func3
    afc20018 0xc8 : sw      $v0, 24($fp)
    8fc2001c 0xcc : lw      $v0, 28($fp)
    20420001 0xd0 : addi    $v0, $v0, 1
    afc2001c 0xd4 : sw      $v0, 28($fp)
    L10:
    8fc2001c 0xd8 : lw      $v0, 28($fp)
    2842000A 0xdc : slti    $v0, $v0, 10
    10400001 0xe0 : beq     $v0, $zero, L12
    0800002a 0xe4 : j       L11
    L12:
    0800003b 0xe8 : j L13
    L13:
    0800003c 0xec : j L14
    L14:
    0800003d 0xf0 : j L15
    L15:
    0800003d 0xf4 : j L15
    0xf8 : 
    0xfc : 

    [dmem_init]
    0x00 : 0
    0x04 : 0
    0x08 : 0
    0x0c : 0
    0x10 : 0
    0x14 : 0
    0x18 : 0
    0x1c : 0
    0x20 : 0
    0x24 : 0
    0x28 : 0
    0x2c : 0
    0x30 : 0
    0x34 : 0
    0x38 : 0
    0x3c : 0
    0x40 : 0
    0x44 : 0
    0x48 : 0
    0x4c : 0
    0x50 : 0
    0x54 : 0
    0x58 : 0
    0x5c : 0
    0x60 : 0
    0x64 : 0
    0x68 : 0
    0x6c : 0
    0x70 : 0
    0x74 : 0
    0x78 : 0
    0x7c : 0
    0x80 : 0
    0x84 : 0
    0x88 : 0
    0x8c : 0
    0x90 : 0
    0x94 : 0
    0x98 : 0
    0x9c : 0
    0xa0 : 0
    0xa4 : 0
    0xa8 : 0
    0xac : 0
    0xb0 : 0
    0xb4 : 0
    0xb8 : 0
    0xbc : 0
    0xc0 : 0
    0xc4 : 0
    0xc8 : 0
    0xcc : 0
    0xd0 : 0
    0xd4 : 0
    0xd8 : 0
    0xdc : 0
    0xe0 : 0
    0xe4 : 0
    0xe8 : 0
    0xec : 0
    0xf0 : 0
    0xf4 : 0
    0xf8 : 0
    0xfc : 0

    [reg_ans]
    x0 : 0
    x1 : 0
    x2 : 0
    x3 : 0
    x4 : 53
    x5 : 0
    x6 : 0
    x7 : 0
    x8 : 0
    x9 : 0
    x10: 0
    x11: 0
    x12: 0
    x13: 0
    x14: 0
    x15: 0
    x16: 0
    x17: 0
    x18: 0
    x19: 0
    x20: 0
    x21: 0
    x22: 0
    x23: 0
    x24: 0
    x25: 0
    x26: 0
    x27: 0
    x28: 0
    x29: 200
    x30: 200
    x31: 200

    [dmem_ans]
    0x00 : 0
    0x04 : 0
    0x08 : 0
    0x0c : 0
    0x10 : 0
    0x14 : 0
    0x18 : 0
    0x1c : 0
    0x20 : 0
    0x24 : 0
    0x28 : 0
    0x2c : 0
    0x30 : 0
    0x34 : 0
    0x38 : 0
    0x3c : 0
    0x40 : 0
    0x44 : 0
    0x48 : 0
    0x4c : 0
    0x50 : 0
    0x54 : 0
    0x58 : 0
    0x5c : 0
    0x60 : 0
    0x64 : 0
    0x68 : 0
    0x6c : 0
    0x70 : 0
    0x74 : 0
    0x78 : 0
    0x7c : 0
    0x80 : 0
    0x84 : 0
    0x88 : 0
    0x8c : 0
    0x90 : 0
    0x94 : 0
    0x98 : 0
    0x9c : 0
    0xa0 : 0
    0xa4 : 0
    0xa8 : 0
    0xac : 0
    0xb0 : 0
    0xb4 : 0
    0xb8 : 0
    0xbc : 0
    0xc0 : 0
    0xc4 : 200
    0xc8 : 53
    0xcc : 0
    0xd0 : 0
    0xd4 : 0
    0xd8 : 0
    0xdc : 0
    0xe0 : 66
    0xe4 : 10
    0xe8 : 0
    0xec : 0
    0xf0 : 0
    0xf4 : 0
    0xf8 : 0
    0xfc : 0

[Pattern 2 : Test Recursive]

    End at cycle 

    void main() {
        int a = 0;
        a = func_recursive(5);
        while(1);
    }

    int func_recursive(int num) {
        if(num == 0) return 0;
        else return func_recursive(num-1) + num;
    }

    a0: 0
    v0: 15
    v1: 10
    sp: 200
    fp: 200
    32: 40
    36: ra
    40: 0
    64: 72
    68: ra
    72: 1
    96: 104
    100: ra
    104: 2
    128: 136
    132: ra
    136: 3
    160: 168
    164: ra
    168: 4
    192: 200
    196: ra
    200: 5
    224: 15

    main:
        addi    $sp, $zero, 200
        addi    $fp, $sp, 0
        sw      $zero, 24($fp)
        addi    $a0, $zero, 5
        jal     func_recursive
        sw      $v0, 24($fp)
        j       L12
    func_recursive:
        addi    $sp, $sp, -32
        sw      $ra, 28($sp)
        sw      $fp, 24($sp)
        addi    $fp, $sp, 0
        sw      $a0, 32($fp)
        lw      $v0, 32($fp)
        beq     $v0, $zero, L4
        j       L2
    L4:
        addi    $v0, $zero, 0
        j       L3
    L2:
        lw      $v0, 32($fp)
        addi    $v0, $v0, -1
        addi    $a0, $v0, 0
        jal     func_recursive
        addi    $v1, $v0, 0
        lw      $v0, 32($fp)
        add     $v0, $v1, $v0
    L3:
        addi    $sp, $fp, 0
        lw      $ra, 28($sp)
        lw      $fp, 24($sp)
        addi    $sp, $sp, 32
        jr      $ra   
    L12:
        j       L13
    L13:
        j       L14
    L14:
        j       L15
    L15:
        j       L15

    main:
    201d00c8 0x00 : addi    $sp, $zero, 200
    23be0000 0x04 : addi    $fp, $sp, 0
    afc00018 0x08 : sw      $zero, 24($fp)
    20040005 0x0c : addi    $a0, $zero, 5
    0c000007 0x10 : jal     func_recursive
    afc20018 0x14 : sw      $v0, 24($fp)
    0800001d 0x18 : j       L12
    func_recursive:
    23bdffe0 0x1c : addi    $sp, $sp, -32
    afbf001c 0x20 : sw      $ra, 28($sp)
    afbe0018 0x24 : sw      $fp, 24($sp)
    23be0000 0x28 : addi    $fp, $sp, 0
    afc40020 0x2c : sw      $a0, 32($fp)
    8fc20020 0x30 : lw      $v0, 32($fp)
    10400001 0x34 : beq     $v0, $zero, L4
    08000011 0x38 : j       L2
    L4:
    20020000 0x3c : addi    $v0, $zero, 0
    08000018 0x40 : j       L3
    L2:
    8fc20020 0x44 : lw      $v0, 32($fp)
    2042ffff 0x48 : addi    $v0, $v0, -1
    20440000 0x4c : addi    $a0, $v0, 0
    0c000007 0x50 : jal     func_recursive
    20430000 0x54 : addi    $v1, $v0, 0
    8fc20020 0x58 : lw      $v0, 32($fp)
    00621020 0x5c : add     $v0, $v1, $v0
    L3:
    23dd0000 0x60 : addi    $sp, $fp, 0
    8fbf001c 0x64 : lw      $ra, 28($sp)
    8fbe0018 0x68 : lw      $fp, 24($sp)
    23bd0020 0x6c : addi    $sp, $sp, 32
    03e00008 0x70 : jr      $ra  
    L12:
    0800001e 0x74 : j       L13
    L13:
    0800001f 0x78 : j       L14
    L14:
    08000020 0x7c : j       L15
    L15:
    08000020 0x80 : j       L15
    0x84 : 
    0x88 : 
    0x8c : 
    0x90 : 
    0x94 : 
    0x98 : 
    0x9c : 
    0xa0 : 
    0xa4 : 
    0xa8 : 
    0xac : 
    0xb0 : 
    0xb4 : 
    0xb8 : 
    0xbc : 
    0xc0 : 
    0xc4 : 
    0xc8 : 
    0xcc : 
    0xd0 : 
    0xd4 : 
    0xd8 : 
    0xdc : 
    0xe0 : 
    0xe4 : 
    0xe8 : 
    0xec : 
    0xf0 : 
    0xf4 : 
    0xf8 : 
    0xfc : 

    [dmem_init]
    0x00 : 0
    0x04 : 0
    0x08 : 0
    0x0c : 0
    0x10 : 0
    0x14 : 0
    0x18 : 0
    0x1c : 0
    0x20 : 0
    0x24 : 0
    0x28 : 0
    0x2c : 0
    0x30 : 0
    0x34 : 0
    0x38 : 0
    0x3c : 0
    0x40 : 0
    0x44 : 0
    0x48 : 0
    0x4c : 0
    0x50 : 0
    0x54 : 0
    0x58 : 0
    0x5c : 0
    0x60 : 0
    0x64 : 0
    0x68 : 0
    0x6c : 0
    0x70 : 0
    0x74 : 0
    0x78 : 0
    0x7c : 0
    0x80 : 0
    0x84 : 0
    0x88 : 0
    0x8c : 0
    0x90 : 0
    0x94 : 0
    0x98 : 0
    0x9c : 0
    0xa0 : 0
    0xa4 : 0
    0xa8 : 0
    0xac : 0
    0xb0 : 0
    0xb4 : 0
    0xb8 : 0
    0xbc : 0
    0xc0 : 0
    0xc4 : 0
    0xc8 : 0
    0xcc : 0
    0xd0 : 0
    0xd4 : 0
    0xd8 : 0
    0xdc : 0
    0xe0 : 0
    0xe4 : 0
    0xe8 : 0
    0xec : 0
    0xf0 : 0
    0xf4 : 0
    0xf8 : 0
    0xfc : 0

    [reg_ans]
    x0 : 0
    x1 : 0
    x2 : 15
    x3 : 10
    x4 : 0
    x5 : 0
    x6 : 0
    x7 : 0
    x8 : 0
    x9 : 0
    x10: 0
    x11: 0
    x12: 0
    x13: 0
    x14: 0
    x15: 0
    x16: 0
    x17: 0
    x18: 0
    x19: 0
    x20: 0
    x21: 0
    x22: 0
    x23: 0
    x24: 0
    x25: 0
    x26: 0
    x27: 0
    x28: 0
    x29: 200
    x30: 200
    x31: 20

    [dmem_ans]
    0x00 : 0
    0x04 : 0
    0x08 : 0
    0x0c : 0
    0x10 : 0
    0x14 : 0
    0x18 : 0
    0x1c : 0
    0x20 : 40
    0x24 : 84
    0x28 : 0
    0x2c : 0
    0x30 : 0
    0x34 : 0
    0x38 : 0
    0x3c : 0
    0x40 : 72
    0x44 : 84
    0x48 : 1
    0x4c : 0
    0x50 : 0
    0x54 : 0
    0x58 : 0
    0x5c : 0
    0x60 : 104
    0x64 : 84
    0x68 : 2
    0x6c : 0
    0x70 : 0
    0x74 : 0
    0x78 : 0
    0x7c : 0
    0x80 : 136
    0x84 : 84
    0x88 : 3
    0x8c : 0
    0x90 : 0
    0x94 : 0
    0x98 : 0
    0x9c : 0
    0xa0 : 168
    0xa4 : 84
    0xa8 : 4
    0xac : 0
    0xb0 : 0
    0xb4 : 0
    0xb8 : 0
    0xbc : 0
    0xc0 : 200
    0xc4 : 20
    0xc8 : 5
    0xcc : 0
    0xd0 : 0
    0xd4 : 0
    0xd8 : 0
    0xdc : 0
    0xe0 : 15
    0xe4 : 0
    0xe8 : 0
    0xec : 0
    0xf0 : 0
    0xf4 : 0
    0xf8 : 0
    0xfc : 0
